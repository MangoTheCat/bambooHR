% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_response_files.R
\name{create_response_files}
\alias{create_response_files}
\title{Create Response Files}
\usage{
create_response_files(response, filepath)
}
\arguments{
\item{response}{A response object - generally returned by \code{\link[httr:GET]{httr::GET()}}.}

\item{filepath}{The full filepath, ending in '.json', given", as the error
output from \code{\link[httptest:with_mock_api]{httptest::with_mock_api()}}}
}
\description{
Helper function to create a directory, response RDS file and
response-reading R script. This is useful when your GET requests return an
unparsed response object, which you want to be mocked using the file
structure required by the \code{{httptest}} package.
}
\details{
The general workflow is to:
\itemize{
\item{1. Create a response object - Put a \code{\link[=browser]{browser()}} after the call to
\code{\link[httr:GET]{httr::GET()}}. This will give you access to the reponse object, which you
should pass to \code{response}.}
\item{2. Run \code{\link[=with_mock_api]{with_mock_api()}} with \code{\link[=test_that]{test_that()}} inside it, and the call to
the function you are testing inside that, as shown in the
\href{https://cran.r-project.org/web/packages/httptest/vignettes/httptest.html}{httptest vignette}.
This will error, and give an API URL/filepath that we will use to store our
test fixtures. This is what we give to \code{filepath}.}
\item{3. Call \link{create_response_files} giving the above two arguments - you
should now have the test fixtures needed in new folders that have been
generated and should now be able to run tests without the original error.}
}
}
\examples{
\dontrun{
create_response_files(
  response,
  "api.bamboohr.com/api/gateway.php/ascent/v1/employees/directory.json"
)
}

}
\keyword{internal}
