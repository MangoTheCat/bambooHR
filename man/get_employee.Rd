% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_employee.r
\name{get_employee}
\alias{get_employee}
\title{Get employee data by specifying a set of fields.}
\usage{
get_employee(
  id = "directory",
  fields = NULL,
  only_current = FALSE,
  verbose = FALSE,
  force_df = FALSE
)
}
\arguments{
\item{id}{Employee ID (character or numeric). The default of "directory" will give a directory of all
employees, along with a table of possible fields. The special employee ID of
zero (0) means to use the employee ID associated with the API key (if any).}

\item{fields}{Character vector of fields to return. To see all available fields,
see the column names of \code{get_employee()}.}

\item{only_current}{Setting to false will return future dated values from
history table fields.}

\item{verbose}{Logical, default FALSE. Whether to return the fields dataframe
when [id = "directory].}
}
\value{
If \code{id} is given then a list of the fields and their values. If
[force_df = TRUE] then this is converted to a dataframe. If
\code{id = 'directory'} (the default) then the directory dataframe is returned.
However, if [verbose = TRUE] then this will be returned in a list along with
the fields dataframe.
}
\description{
This is suitable for getting basic employee information, including current
values for fields that are part of a historical table, like job title,
or compensation information. See the fields endpoint for a list of possible
 fields.
}
\examples{
\dontrun{
get_employee()
get_employee(0, fields = c("firstName", "lastName"))
}

}
